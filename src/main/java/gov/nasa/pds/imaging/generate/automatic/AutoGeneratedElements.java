package gov.nasa.pds.imaging.generate.automatic;

import gov.nasa.pds.imaging.generate.TemplateException;
import gov.nasa.pds.imaging.generate.automatic.elements.Element;
import gov.nasa.pds.imaging.generate.context.PDSObjectContext;
import gov.nasa.pds.imaging.generate.label.PDSObject;
import gov.nasa.pds.imaging.generate.util.XMLUtil;
import gov.nasa.pds.imaging.generate.util.Debugger;

import java.util.HashMap;
import java.util.Map;
import java.util.Arrays;
import java.util.List;

public class AutoGeneratedElements implements PDSObjectContext {
    /** Specifies the CONTEXT to be mapped to the Velocity Templates. **/
    public static final String CONTEXT = "generate";

    /** The XML File Path for the file with the generated value mappings **/
    public static final String XML_FILENAME = "generated-mappings.xml";

    /** XML element name holding the key value **/
    public static final String XML_KEY = "context";

    /** XML element name holding the mapped value **/
    public static final String XML_VALUE = "class";

    /** Map that will hole the String -> Class mappings specified in the XML **/
    public Map<String, Class<?>> genValsMap = new HashMap<String, Class<?>>();

    //private String filePath;
    private PDSObject pdsObject;

    public AutoGeneratedElements() {
    	Debugger.debug("AutoGeneratedElements constructor");
    }

    public void addMapping(final String key, final Class<?> value) {
      	if (Debugger.debugFlag) System.out.printf("AutoGeneratedElements.addMappings key=%s", key);
            this.genValsMap.put(key, value);
    }

    @Override
    public String get(final String value) throws TemplateException {
        Element el;
        if (Debugger.debugFlag) System.out.printf("AutoGeneratedElements.get(%s) \n", value);
        String[] items = value.split("--");
        
        List<String> itemList = Arrays.asList(items);
        if (Debugger.debugFlag) {
	        System.out.printf("items.length = %d \n", items.length);
	        System.out.println(itemList);
        }
        
        try {
        	if (items.length == 1) {
            el = (Element) this.genValsMap.get(value).newInstance();
            el.setParameters(this.pdsObject);
            String v = el.getValue();
            if (Debugger.debugFlag)System.out.printf("AutoGeneratedElements.get(%s) return %s\n", value, v);
            return v;
        	} else {
        		el = (Element) this.genValsMap.get(items[0]).newInstance();
            el.setParameters(this.pdsObject);
            // el.setValue(items[1]);
            return el.getValue();
        	}
        } catch (final InstantiationException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        } catch (final IllegalAccessException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        } catch (final NullPointerException e) {
            return "Object Not Found";
            // throw new TemplateException("Generated value: " + value +
            // " Not expected.  Verify class mapping exists.");
        }
        
        return null;
    }

    @Override
    public String getContext() {
       return CONTEXT;
    }

    @Override
    public String getUnits(final String key) {
      // TODO Auto-generated method stub
      return null;
    }
    
    @Override
    public void setParameters(PDSObject pdsObject) {
    	this.pdsObject = pdsObject;
    }

    @Override
    public void setMappings() throws Exception {
    	Debugger.debug("AutoGeneratedElements.setMappings ");
        this.genValsMap.putAll(XMLUtil.getGeneratedMappings(
            AutoGeneratedElements.class.getResourceAsStream(XML_FILENAME), 
            XML_KEY, XML_VALUE));
    }

}
